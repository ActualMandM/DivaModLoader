#include "SigScan.h"
#include <Psapi.h>

bool sigValid = true;

MODULEINFO moduleInfo;

const MODULEINFO& getModuleInfo()
{
    if (moduleInfo.SizeOfImage)
        return moduleInfo;

    ZeroMemory(&moduleInfo, sizeof(MODULEINFO));
    GetModuleInformation(GetCurrentProcess(), GetModuleHandle(nullptr), &moduleInfo, sizeof(MODULEINFO));

    return moduleInfo;
}

void* sigScan(const char* signature, const char* mask)
{
    const MODULEINFO& info = getModuleInfo();
    const size_t length = strlen(mask);

    for (size_t i = 0; i < info.SizeOfImage; i++)
    {
        char* memory = (char*)info.lpBaseOfDll + i;

        size_t j;
        for (j = 0; j < length; j++)
        {
            if (mask[j] != '?' && signature[j] != memory[j])
                break;
        }

        if (j == length) 
            return memory;
    }

    return nullptr;
}

#define SIG_SCAN(x, ...) \
    void* x(); \
    void* x##Addr = x(); \
    void* x() \
    { \
        static const char* x##Data[] = { __VA_ARGS__ }; \
        if (!x##Addr) \
        { \
            for (int i = 0; i < _countof(x##Data); i += 2) \
            { \
                x##Addr = sigScan(x##Data[i], x##Data[i + 1]); \
                if (x##Addr) \
                    return x##Addr; \
            } \
            sigValid = false; \
        } \
        return x##Addr; \
    }

SIG_SCAN(sigWinMain, "\x40\x55\x53\x57\x41\x54\x41\x55\x48\x8D\xAC\x24\x00\x00\x00\x00\xB8\x00\x00\x00\x00\xE8\x00\x00\x00\x00\x48\x2B\xE0\x48\x8B\x05\x00\x00\x00\x00\x48\x33\xC4\x48\x89\x85\x00\x00\x00\x00\x48\x8B\xD9\xBA\x00\x00\x00\x00\x33\xC9\x45\x8B\xE1\xFF\x15\x00\x00\x00\x00\xFF\x15\x00\x00\x00\x00\x4C\x8B\xC0\x48\x8D\x95\x00\x00\x00\x00\x48\x8D\x8D\x00\x00\x00\x00", "xxxxxxxxxxxx????x????x????xxxxxx????xxxxxx????xxxx????xxxxxxx????xx????xxxxxx????xxx????")
SIG_SCAN(sigOperatorNew, "\x40\x53\x48\x83\xEC\x20\x48\x8B\xD9\xEB\x0F\x48\x8B\xCB\xE8\x00\x00\x00\x00\x85\xC0\x74\x13\x48\x8B\xCB\xE8\x00\x00\x00\x00\x48\x85\xC0\x74\xE7\x48\x83\xC4\x20\x5B\xC3\x48\x83\xFB\xFF\x74\x06\xE8\x00\x00\x00\x00\xCC\xE8\x00\x00\x00\x00\xCC\x40\x53", "xxxxxxxxxxxxxxx????xxxxxxxx????xxxxxxxxxxxxxxxxxx????xx????xxx")
SIG_SCAN(sigOperatorDelete, "\x48\x85\xC9\x74\x37\x53\x48\x83\xEC\x20\x4C\x8B\xC1\x33\xD2\x48\x8B\x0D\x00\x00\x00\x00\xFF\x15\x00\x00\x00\x00\x85\xC0\x75\x17\xE8\x00\x00\x00\x00\x48\x8B\xD8\xFF\x15\x00\x00\x00\x00\x8B\xC8\xE8\x00\x00\x00\x00\x89\x03\x48\x83\xC4\x20\x5B\xC3", "xxxxxxxxxxxxxxxxxx????xx????xxxxx????xxxxx????xxx????xxxxxxxx")
SIG_SCAN(sigInitRomDirectoryPaths, "\x48\x89\x5C\x24\x00\x48\x89\x74\x24\x00\x48\x89\x7C\x24\x00\x55\x41\x54\x41\x55\x41\x56\x41\x57\x48\x8B\xEC\x48\x81\xEC\x00\x00\x00\x00\x48\x8B\x05\x00\x00\x00\x00\x48\x33\xC4\x48\x89\x45\xF0\x48\x8D\x0D\x00\x00\x00\x00\xE8\x00\x00\x00\x00\x33\xF6\x48\x89\x75\xD0\x48\x89\x75\xE0\xBF\x00\x00\x00\x00\x48\x89\x7D\xE8\x40\x88\x75\xD0\x45\x33\xC0\x48\x8D\x15\x00\x00\x00\x00\x48\x8D\x4D\xD0\xE8\x00\x00\x00\x00\x90\x44\x8D\x46\x02\x48\x8D\x15\x00\x00\x00\x00\x48\x8D\x4D\xD0\xE8\x00\x00\x00\x00\x89\x75\xC0\x4C\x8D\x25\x00\x00\x00\x00\x48\x8D\x5E\xFF\x0F\x1F\x80\x00\x00\x00\x00", "xxxx?xxxx?xxxx?xxxxxxxxxxxxxxx????xxx????xxxxxxxxxx????x????xxxxxxxxxxx????xxxxxxxxxxxxxx????xxxxx????xxxxxxxx????xxxxx????xxxxxx????xxxxxxx????")
SIG_SCAN(sigInitSteamAPIManager, "\x48\x89\x5C\x24\x00\x57\x48\x83\xEC\x20\x48\x8B\xF9\x80\x79\x08\x00\x0F\x85\x00\x00\x00\x00\xB9\x00\x00\x00\x00\xFF\x15\x00\x00\x00\x00\x84\xC0\x74\x0F\xC6\x47\x08\x00\x48\x8B\x5C\x24\x00\x48\x83\xC4\x20\x5F\xC3", "xxxx?xxxxxxxxxxxxxx????x????xx????xxxxxxxxxxxx?xxxxxx")